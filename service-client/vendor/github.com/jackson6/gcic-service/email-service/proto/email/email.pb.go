// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/email/email.proto

package go_micro_srv_email

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ContactUs struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Company              string   `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Message              string   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactUs) Reset()         { *m = ContactUs{} }
func (m *ContactUs) String() string { return proto.CompactTextString(m) }
func (*ContactUs) ProtoMessage()    {}
func (*ContactUs) Descriptor() ([]byte, []int) {
	return fileDescriptor_840f7b8354a62044, []int{0}
}

func (m *ContactUs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactUs.Unmarshal(m, b)
}
func (m *ContactUs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactUs.Marshal(b, m, deterministic)
}
func (m *ContactUs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactUs.Merge(m, src)
}
func (m *ContactUs) XXX_Size() int {
	return xxx_messageInfo_ContactUs.Size(m)
}
func (m *ContactUs) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactUs.DiscardUnknown(m)
}

var xxx_messageInfo_ContactUs proto.InternalMessageInfo

func (m *ContactUs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContactUs) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ContactUs) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ContactUs) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *ContactUs) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MemberId             string   `protobuf:"bytes,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	FirstName            string   `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Initial              string   `protobuf:"bytes,6,opt,name=initial,proto3" json:"initial,omitempty"`
	Email                string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Trn                  string   `protobuf:"bytes,8,opt,name=trn,proto3" json:"trn,omitempty"`
	WorkPhone            string   `protobuf:"bytes,9,opt,name=work_phone,json=workPhone,proto3" json:"work_phone,omitempty"`
	HomePhone            string   `protobuf:"bytes,10,opt,name=home_phone,json=homePhone,proto3" json:"home_phone,omitempty"`
	CellPhone            string   `protobuf:"bytes,11,opt,name=cell_phone,json=cellPhone,proto3" json:"cell_phone,omitempty"`
	SponsorId            string   `protobuf:"bytes,12,opt,name=sponsor_id,json=sponsorId,proto3" json:"sponsor_id,omitempty"`
	Address              string   `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Parish               string   `protobuf:"bytes,14,opt,name=parish,proto3" json:"parish,omitempty"`
	Country              string   `protobuf:"bytes,15,opt,name=country,proto3" json:"country,omitempty"`
	Question             string   `protobuf:"bytes,16,opt,name=question,proto3" json:"question,omitempty"`
	Answer               string   `protobuf:"bytes,17,opt,name=answer,proto3" json:"answer,omitempty"`
	Dob                  string   `protobuf:"bytes,18,opt,name=dob,proto3" json:"dob,omitempty"`
	Gender               string   `protobuf:"bytes,19,opt,name=gender,proto3" json:"gender,omitempty"`
	StripeId             string   `protobuf:"bytes,20,opt,name=stripe_id,json=stripeId,proto3" json:"stripe_id,omitempty"`
	PlanId               string   `protobuf:"bytes,21,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	ReferralCode         string   `protobuf:"bytes,22,opt,name=referral_code,json=referralCode,proto3" json:"referral_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_840f7b8354a62044, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *User) GetMemberId() string {
	if m != nil {
		return m.MemberId
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetInitial() string {
	if m != nil {
		return m.Initial
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetTrn() string {
	if m != nil {
		return m.Trn
	}
	return ""
}

func (m *User) GetWorkPhone() string {
	if m != nil {
		return m.WorkPhone
	}
	return ""
}

func (m *User) GetHomePhone() string {
	if m != nil {
		return m.HomePhone
	}
	return ""
}

func (m *User) GetCellPhone() string {
	if m != nil {
		return m.CellPhone
	}
	return ""
}

func (m *User) GetSponsorId() string {
	if m != nil {
		return m.SponsorId
	}
	return ""
}

func (m *User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *User) GetParish() string {
	if m != nil {
		return m.Parish
	}
	return ""
}

func (m *User) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *User) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *User) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func (m *User) GetDob() string {
	if m != nil {
		return m.Dob
	}
	return ""
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetStripeId() string {
	if m != nil {
		return m.StripeId
	}
	return ""
}

func (m *User) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *User) GetReferralCode() string {
	if m != nil {
		return m.ReferralCode
	}
	return ""
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_840f7b8354a62044, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ContactUs)(nil), "go.micro.srv.email.ContactUs")
	proto.RegisterType((*User)(nil), "go.micro.srv.email.User")
	proto.RegisterType((*Response)(nil), "go.micro.srv.email.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for EmailService service

type EmailServiceClient interface {
	Contact(ctx context.Context, in *ContactUs, opts ...client.CallOption) (*Response, error)
	Welcome(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
}

type emailServiceClient struct {
	c           client.Client
	serviceName string
}

func NewEmailServiceClient(serviceName string, c client.Client) EmailServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.email"
	}
	return &emailServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *emailServiceClient) Contact(ctx context.Context, in *ContactUs, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "EmailService.Contact", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailServiceClient) Welcome(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "EmailService.Welcome", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EmailService service

type EmailServiceHandler interface {
	Contact(context.Context, *ContactUs, *Response) error
	Welcome(context.Context, *User, *Response) error
}

func RegisterEmailServiceHandler(s server.Server, hdlr EmailServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&EmailService{hdlr}, opts...))
}

type EmailService struct {
	EmailServiceHandler
}

func (h *EmailService) Contact(ctx context.Context, in *ContactUs, out *Response) error {
	return h.EmailServiceHandler.Contact(ctx, in, out)
}

func (h *EmailService) Welcome(ctx context.Context, in *User, out *Response) error {
	return h.EmailServiceHandler.Welcome(ctx, in, out)
}

func init() { proto.RegisterFile("proto/email/email.proto", fileDescriptor_840f7b8354a62044) }

var fileDescriptor_840f7b8354a62044 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x69, 0xd7, 0x35, 0xc9, 0xa1, 0x1b, 0xc3, 0x8c, 0xcd, 0xda, 0xa8, 0x84, 0xca, 0x0d,
	0x57, 0x41, 0x82, 0x47, 0xa8, 0x90, 0xc8, 0x0d, 0x42, 0x43, 0x13, 0x97, 0x95, 0x1b, 0x9f, 0xb5,
	0x16, 0x89, 0x1d, 0xec, 0x74, 0xd3, 0xae, 0x78, 0x12, 0x9e, 0x88, 0x97, 0x42, 0xc7, 0xc7, 0x29,
	0x48, 0x4c, 0xda, 0x4d, 0x94, 0xff, 0xff, 0x2c, 0x9f, 0xe3, 0xff, 0xd8, 0x70, 0xde, 0x79, 0xd7,
	0xbb, 0x77, 0xd8, 0x2a, 0xd3, 0xf0, 0xb7, 0x8c, 0x8e, 0x10, 0x1b, 0x57, 0xb6, 0xa6, 0xf6, 0xae,
	0x0c, 0xfe, 0xb6, 0x8c, 0x64, 0xf1, 0x13, 0x8a, 0xa5, 0xb3, 0xbd, 0xaa, 0xfb, 0xeb, 0x20, 0x04,
	0x4c, 0xac, 0x6a, 0x51, 0x8e, 0x5e, 0x8f, 0xde, 0x16, 0x57, 0xf1, 0x5f, 0x9c, 0xc2, 0x61, 0x5c,
	0x29, 0xc7, 0xd1, 0x64, 0x41, 0x6e, 0xb7, 0x75, 0x16, 0xe5, 0x01, 0xbb, 0x51, 0x08, 0x09, 0x59,
	0xed, 0xda, 0x4e, 0xd9, 0x7b, 0x39, 0x89, 0xfe, 0x20, 0x89, 0xb4, 0x18, 0x82, 0xda, 0xa0, 0x3c,
	0x64, 0x92, 0xe4, 0xe2, 0xf7, 0x04, 0x26, 0xd7, 0x01, 0xbd, 0x38, 0x86, 0xb1, 0xd1, 0xa9, 0xf4,
	0xd8, 0x68, 0x71, 0x0e, 0xd9, 0x2e, 0xa0, 0x5f, 0x19, 0x9d, 0x4a, 0x4f, 0x49, 0x56, 0x5a, 0x5c,
	0x42, 0xd1, 0x62, 0xbb, 0x66, 0xc4, 0xf5, 0x73, 0x36, 0x2a, 0x2d, 0xe6, 0x00, 0x37, 0xc6, 0x87,
	0x7e, 0x15, 0x0f, 0xc2, 0x5d, 0x14, 0xd1, 0xf9, 0x4c, 0xa7, 0xb9, 0x84, 0xa2, 0x51, 0x03, 0xe5,
	0x4e, 0x72, 0x32, 0x22, 0x94, 0x90, 0x19, 0x6b, 0x7a, 0xa3, 0x1a, 0x39, 0xe5, 0x26, 0x93, 0xfc,
	0x1b, 0x42, 0xf6, 0x6f, 0x08, 0x27, 0x70, 0xd0, 0x7b, 0x2b, 0xf3, 0xe8, 0xd1, 0x2f, 0x55, 0xbf,
	0x73, 0xfe, 0xfb, 0x8a, 0xb3, 0x29, 0xb8, 0x3a, 0x39, 0x5f, 0x62, 0x3e, 0x73, 0x80, 0xad, 0x6b,
	0x31, 0x61, 0x60, 0x4c, 0xce, 0x1e, 0xd7, 0xd8, 0x34, 0x09, 0x3f, 0x65, 0x4c, 0xce, 0x1e, 0x87,
	0xce, 0xd9, 0xe0, 0xe2, 0xc1, 0x67, 0x8c, 0x93, 0x53, 0x69, 0xea, 0x5e, 0x69, 0xed, 0x31, 0x04,
	0x79, 0xc4, 0xdd, 0x27, 0x29, 0xce, 0x60, 0xda, 0x29, 0x6f, 0xc2, 0x56, 0x1e, 0x73, 0x90, 0xac,
	0x78, 0x5c, 0x3b, 0xdb, 0xfb, 0x7b, 0xf9, 0x6c, 0x18, 0x57, 0x94, 0xe2, 0x02, 0xf2, 0x1f, 0x3b,
	0x0c, 0xbd, 0x71, 0x56, 0x9e, 0x70, 0x4a, 0x83, 0xa6, 0xdd, 0x94, 0x0d, 0x77, 0xe8, 0xe5, 0x73,
	0xde, 0x8d, 0x15, 0xa5, 0xa1, 0xdd, 0x5a, 0x0a, 0x4e, 0x43, 0xbb, 0x35, 0xad, 0xdc, 0xa0, 0xd5,
	0xe8, 0xe5, 0x0b, 0x5e, 0xc9, 0x8a, 0x86, 0x10, 0x7a, 0x6f, 0x3a, 0xa4, 0x73, 0x9c, 0xf2, 0xf6,
	0x6c, 0x54, 0x71, 0xec, 0x5d, 0xa3, 0x2c, 0xa1, 0x97, 0xa9, 0xdb, 0x46, 0xd9, 0x4a, 0x8b, 0x37,
	0x70, 0xe4, 0xf1, 0x06, 0xbd, 0x57, 0xcd, 0xaa, 0x76, 0x1a, 0xe5, 0x59, 0xc4, 0xb3, 0xc1, 0x5c,
	0x3a, 0x8d, 0x0b, 0x80, 0xfc, 0x0a, 0x63, 0x26, 0xf8, 0xfe, 0xd7, 0x08, 0x66, 0x1f, 0x69, 0x50,
	0x5f, 0xd1, 0xdf, 0x9a, 0x1a, 0xc5, 0x27, 0xc8, 0xd2, 0x5d, 0x17, 0xf3, 0xf2, 0xff, 0xb7, 0x50,
	0xee, 0x1f, 0xc2, 0xc5, 0xab, 0x87, 0xf0, 0xb0, 0xf1, 0xe2, 0x89, 0x58, 0x42, 0xf6, 0x0d, 0x9b,
	0xda, 0xd1, 0xa5, 0x79, 0x68, 0x29, 0x5d, 0xe8, 0xc7, 0x36, 0x59, 0x4f, 0xe3, 0xab, 0xfc, 0xf0,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x82, 0xf1, 0x83, 0x48, 0xb0, 0x03, 0x00, 0x00,
}
