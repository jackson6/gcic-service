// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/benefit/benefit.proto

package plan

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	"gopkg.in/mgo.v2/bson"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Plan struct {
	Id                   *bson.ObjectId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	Amount               int64      `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Includes             []*Include `protobuf:"bytes,5,rep,name=includes,proto3" json:"includes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_91877109aacab46f, []int{0}
}

func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (m *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(m, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetId() *bson.ObjectId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Plan) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Plan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plan) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Plan) GetIncludes() []*Include {
	if m != nil {
		return m.Includes
	}
	return nil
}

type Include struct {
	Include              string   `protobuf:"bytes,1,opt,name=include,proto3" json:"include,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Include) Reset()         { *m = Include{} }
func (m *Include) String() string { return proto.CompactTextString(m) }
func (*Include) ProtoMessage()    {}
func (*Include) Descriptor() ([]byte, []int) {
	return fileDescriptor_91877109aacab46f, []int{1}
}

func (m *Include) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Include.Unmarshal(m, b)
}
func (m *Include) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Include.Marshal(b, m, deterministic)
}
func (m *Include) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Include.Merge(m, src)
}
func (m *Include) XXX_Size() int {
	return xxx_messageInfo_Include.Size(m)
}
func (m *Include) XXX_DiscardUnknown() {
	xxx_messageInfo_Include.DiscardUnknown(m)
}

var xxx_messageInfo_Include proto.InternalMessageInfo

func (m *Include) GetInclude() string {
	if m != nil {
		return m.Include
	}
	return ""
}

type Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_91877109aacab46f, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_91877109aacab46f, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Plan                 *Plan    `protobuf:"bytes,2,opt,name=benefit,proto3" json:"benefit,omitempty"`
	Plans                []*Plan  `protobuf:"bytes,3,rep,name=plans,proto3" json:"plans,omitempty"`
	Errors               []*Error `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_91877109aacab46f, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetPlan() *Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *Response) GetPlans() []*Plan {
	if m != nil {
		return m.Plans
	}
	return nil
}

func (m *Response) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterType((*Plan)(nil), "benefit.Plan")
	proto.RegisterType((*Include)(nil), "benefit.Include")
	proto.RegisterType((*Request)(nil), "benefit.Request")
	proto.RegisterType((*Error)(nil), "benefit.Error")
	proto.RegisterType((*Response)(nil), "benefit.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for PlanService service

type PlanServiceClient interface {
	Create(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error)
	Update(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error)
	Delete(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error)
	Get(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error)
	All(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type planServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPlanServiceClient(serviceName string, c client.Client) PlanServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "benefit"
	}
	return &planServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *planServiceClient) Create(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PlanService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planServiceClient) Update(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PlanService.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planServiceClient) Delete(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PlanService.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planServiceClient) Get(ctx context.Context, in *Plan, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PlanService.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *planServiceClient) All(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PlanService.All", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PlanService service

type PlanServiceHandler interface {
	Create(context.Context, *Plan, *Response) error
	Update(context.Context, *Plan, *Response) error
	Delete(context.Context, *Plan, *Response) error
	Get(context.Context, *Plan, *Response) error
	All(context.Context, *Request, *Response) error
}

func RegisterPlanServiceHandler(s server.Server, hdlr PlanServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PlanService{hdlr}, opts...))
}

type PlanService struct {
	PlanServiceHandler
}

func (h *PlanService) Create(ctx context.Context, in *Plan, out *Response) error {
	return h.PlanServiceHandler.Create(ctx, in, out)
}

func (h *PlanService) Update(ctx context.Context, in *Plan, out *Response) error {
	return h.PlanServiceHandler.Update(ctx, in, out)
}

func (h *PlanService) Delete(ctx context.Context, in *Plan, out *Response) error {
	return h.PlanServiceHandler.Delete(ctx, in, out)
}

func (h *PlanService) Get(ctx context.Context, in *Plan, out *Response) error {
	return h.PlanServiceHandler.Get(ctx, in, out)
}

func (h *PlanService) All(ctx context.Context, in *Request, out *Response) error {
	return h.PlanServiceHandler.All(ctx, in, out)
}

func init() { proto.RegisterFile("proto/benefit/benefit.proto", fileDescriptor_91877109aacab46f) }

var fileDescriptor_91877109aacab46f = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0xef, 0xe4, 0x5f, 0xdb, 0x93, 0xdb, 0x2e, 0x0e, 0xdc, 0xcb, 0x70, 0x17, 0x97, 0x90,
	0x82, 0xc4, 0x4d, 0x85, 0xba, 0x76, 0x21, 0x2a, 0xe2, 0x4e, 0x46, 0x7c, 0x80, 0x98, 0x9c, 0x45,
	0x20, 0x9d, 0x89, 0x33, 0xa9, 0x6f, 0xe0, 0xda, 0x77, 0xf3, 0x89, 0x64, 0x4e, 0x52, 0x29, 0x56,
	0xa8, 0x9b, 0xe4, 0x9c, 0xef, 0xfb, 0xe6, 0xf0, 0xcb, 0xc9, 0xc0, 0x9f, 0xce, 0x9a, 0xde, 0x9c,
	0x75, 0x6d, 0xa9, 0xf9, 0xb1, 0xe2, 0x1e, 0x23, 0x5f, 0xe7, 0x6f, 0x02, 0xa2, 0xfb, 0xb6, 0xd4,
	0xb8, 0x80, 0xa0, 0xa9, 0xa5, 0xc8, 0x44, 0xf1, 0x5b, 0x05, 0x4d, 0x8d, 0x7f, 0x21, 0x29, 0x37,
	0x66, 0xab, 0x7b, 0x19, 0x64, 0xa2, 0x08, 0xd5, 0xd8, 0x21, 0x42, 0xa4, 0xcb, 0x0d, 0xc9, 0x30,
	0x13, 0xc5, 0x4c, 0x71, 0x8d, 0x19, 0xa4, 0x35, 0xb9, 0xca, 0x36, 0x5d, 0xdf, 0x18, 0x2d, 0x23,
	0xb6, 0xf6, 0x25, 0x3c, 0x85, 0x69, 0xa3, 0xab, 0x76, 0x5b, 0x93, 0x93, 0x71, 0x16, 0x16, 0xe9,
	0x7a, 0xbe, 0x62, 0x96, 0xbb, 0x41, 0x55, 0x9f, 0x76, 0xbe, 0x84, 0xc9, 0x28, 0xa2, 0x84, 0xc9,
	0x28, 0x33, 0xd8, 0x4c, 0xed, 0xda, 0x7c, 0x06, 0x13, 0x45, 0xcf, 0x5b, 0x72, 0x7d, 0x7e, 0x01,
	0xf1, 0x8d, 0xb5, 0xc6, 0x7a, 0xb2, 0xca, 0x8c, 0xd1, 0x58, 0x71, 0xfd, 0x95, 0x2c, 0x38, 0x20,
	0xcb, 0x5f, 0x05, 0x4c, 0x15, 0xb9, 0xce, 0x68, 0x47, 0xdf, 0x8e, 0xf8, 0x0f, 0xbc, 0x29, 0x3e,
	0x9b, 0xae, 0x61, 0xc0, 0xf6, 0x2b, 0x53, 0xac, 0x63, 0x06, 0xb1, 0x7f, 0x3b, 0x19, 0xf2, 0x77,
	0xed, 0x07, 0x06, 0x03, 0x97, 0x90, 0x90, 0x27, 0x74, 0x32, 0xe2, 0x48, 0x3a, 0x44, 0x98, 0x5a,
	0x8d, 0xd6, 0xfa, 0x5d, 0x40, 0xea, 0x0f, 0x3d, 0x90, 0x7d, 0x69, 0x2a, 0xc2, 0x13, 0x48, 0xae,
	0x2c, 0x95, 0x3d, 0xe1, 0xde, 0xc4, 0x7f, 0x8b, 0xa1, 0xde, 0x01, 0xe7, 0xbf, 0x7c, 0xee, 0xb1,
	0xab, 0x7f, 0x94, 0xbb, 0xa6, 0x96, 0x8e, 0xe6, 0x96, 0x10, 0xde, 0x52, 0x7f, 0x74, 0x58, 0x78,
	0xd9, 0xb6, 0x38, 0xdf, 0x19, 0xfc, 0x27, 0x0e, 0x73, 0x4f, 0x09, 0x5f, 0xb5, 0xf3, 0x8f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x2a, 0x3a, 0xea, 0x31, 0x83, 0x02, 0x00, 0x00,
}
